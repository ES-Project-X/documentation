"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6046],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1017:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:2},o="Definition of Ready",s={unversionedId:"user-stories/definition_of_ready",id:"user-stories/definition_of_ready",title:"Definition of Ready",description:"The Definition of Ready (DoR) is a crucial prerequisite in software development that emphasizes preparation and precise criteria. It is a set of conditions that must be met before a task can be accepted into a sprint. DoR is a collaborative effort between the product owner and the development team to ensure that tasks are well-defined and ready to be worked on.",source:"@site/docs/user-stories/definition_of_ready.md",sourceDirName:"user-stories",slug:"/user-stories/definition_of_ready",permalink:"/documentation/docs/user-stories/definition_of_ready",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/user-stories/definition_of_ready.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"User Stories",permalink:"/documentation/docs/user-stories/user_stories"},next:{title:"Definition of Done",permalink:"/documentation/docs/user-stories/definition_of_done"}},l={},c=[{value:"INVEST",id:"invest",level:2},{value:"Acceptance Criteria (Given-When-Then)",id:"acceptance-criteria-given-when-then",level:2},{value:"Estimation in Story Points",id:"estimation-in-story-points",level:2},{value:"Planning Poker Method",id:"planning-poker-method",level:3}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"definition-of-ready"},"Definition of Ready"),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},"Definition of Ready")," (DoR) is a crucial prerequisite in software development that emphasizes preparation and precise criteria. It is a set of conditions that must be met before a task can be accepted into a sprint. DoR is a collaborative effort between the product owner and the development team to ensure that tasks are well-defined and ready to be worked on. "),(0,r.kt)("p",null,"DoR is a prerequisite for the Definition of Done (DoD), which is a set of conditions that must be met before a task can be considered complete."),(0,r.kt)("h2",{id:"invest"},"INVEST"),(0,r.kt)("p",null,"DoR follows the INVEST model, emphasizing the following key principles for tasks:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Independent"),": Tasks are self-contained."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Negotiable"),": Teams have flexibility in their approach."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Valuable"),": Tasks deliver meaningful outcomes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Estimable"),": Task complexity can be accurately assessed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Small"),": Complex tasks are broken down into manageable components."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"Testable"),": Tasks can be verified for successful completion.")),(0,r.kt)("h2",{id:"acceptance-criteria-given-when-then"},"Acceptance Criteria (Given-When-Then)"),(0,r.kt)("p",null,"Structured conditions, actions, and expected results guide task completion and validation. It is based on the format:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Given")," ","<","context",">",", ",(0,r.kt)("strong",{parentName:"li"},"When")," ","<","action",">",", ",(0,r.kt)("strong",{parentName:"li"},"Then")," ","<","result",">")),(0,r.kt)("h2",{id:"estimation-in-story-points"},"Estimation in Story Points"),(0,r.kt)("p",null,"Tasks are estimated on a scale from 0 to 100, facilitating a standardized approach to assess complexity."),(0,r.kt)("p",null,"This story points were estimated using the ",(0,r.kt)("strong",{parentName:"p"},"Planning Poker Method"),"."),(0,r.kt)("h3",{id:"planning-poker-method"},"Planning Poker Method"),(0,r.kt)("p",null,"The Planning Poker Method is a consensus-based technique that allows teams to estimate the complexity of a task. It is based on the following steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Each team member is given a set of cards with numbers representing the complexity of a task."),(0,r.kt)("li",{parentName:"ol"},"The product owner presents a task to the team."),(0,r.kt)("li",{parentName:"ol"},"Each team member selects a card that represents their estimate of the task's complexity."),(0,r.kt)("li",{parentName:"ol"},"The cards are revealed, and the team discusses the estimates."),(0,r.kt)("li",{parentName:"ol"},"The process is repeated until a consensus is reached.")),(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("p",null,"By integrating these elements, DoR fosters a collaborative environment focused on efficiency, transparency, and timely delivery of high-quality software solutions."))}u.isMDXComponent=!0}}]);